{"version":3,"sources":["components/list.component/list.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uBAAgC,eAAe,CAAC,CAAA;AAChD,+BAA4B,2BAA2B,CAAC,CAAA;AAUxD;IAIE,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;IAClC,CAAC;IAEO,aAAa,CAAC,aAA6B;QACjD,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW;iBAC5B,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACjG,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;QAClC,CAAC;IACH,CAAC;IAEO,OAAO;QACb,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE;aAC9B,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,CAAC;IACtE,CAAC;IAEO,qBAAqB,CAAC,WAAmB,EAAE,cAAsB;QACvE,MAAM,CAAC,cAAc;aAClB,WAAW,EAAE;aACb,QAAQ,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;IACxD,CAAC;AACH,CAAC;AApCD;IAAC,gBAAS,CAAC;QACT,QAAQ,EAAE,MAAM;QAChB,WAAW,EAAE,mDAAmD;QAChE,SAAS,EAAE,CAAE,0BAAW,CAAE;KAC3B,CAAC;;iBAAA;AAEW,qBAAa,gBA8BzB,CAAA","file":"components/list.component/list.component.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport { ListService } from \"../../shared/list.service\";\nimport { Person } from \"../../shared/person.model\";\nimport {EmittingObject} from \"../../shared/emittingObject.model\";\n\n@Component({\n  selector: 'list',\n  templateUrl: 'app/components/list.component/list.component.html',\n  providers: [ ListService ]\n})\n\nexport class ListComponent implements OnInit {\n  public persons: Person[];\n  public personsData: Person[];\n\n  constructor(private listService: ListService) {}\n\n  ngOnInit() {\n    this.getData();\n    this.persons = this.personsData;\n  }\n\n  private onQueryString(emittedObject: EmittingObject) {\n    if (emittedObject.value != '') {\n      this.persons = this.personsData\n        .filter(person => this.checkContainsInString(emittedObject.value, person[emittedObject.id]));\n    } else {\n      this.persons = this.personsData;\n    }\n  }\n\n  private getData() {\n    this.listService.getPromiseData()\n      .then(usersArray => this.personsData = this.persons = usersArray);\n  }\n\n  private checkContainsInString(queryString: string, checkingString: string) {\n    return checkingString\n      .toLowerCase()\n      .includes(queryString.toLowerCase()) ? true : false;\n  }\n}\n\n"],"sourceRoot":"/source/"}