{"version":3,"sources":["components/list.component/list.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uBAA0B,eAAe,CAAC,CAAA;AAC1C,+BAA4B,2BAA2B,CAAC,CAAA;AAUxD;IAKE,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAC1C,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAEO,QAAQ,CAAC,IAAI;QACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IACnD,CAAC;IAEO,OAAO;QACb,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE;aAC9B,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IACzC,CAAC;IAEO,qBAAqB,CAAC,MAAc,EAAE,MAAkB;QAC9D,IAAI,SAAS,GAAY,IAAI,CAAC;QAC9B,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC;YACxB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBAAC,SAAS,GAAG,KAAK,CAAC;QACjF,CAAC;QACD,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAEO,qBAAqB,CAAC,YAAoB,EAAE,YAAoB;QACtE,MAAM,CAAC,YAAY,CAAC,WAAW,EAAE;aAC9B,QAAQ,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAA;IACzC,CAAC;IAEO,cAAc,CAAC,MAAkB;QACvC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW;aACtC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IAClE,CAAC;AACH,CAAC;AAzCD;IAAC,gBAAS,CAAC;QACT,QAAQ,EAAE,MAAM;QAChB,WAAW,EAAE,mDAAmD;QAChE,SAAS,EAAE,CAAE,0BAAW,CAAE;KAC3B,CAAC;;iBAAA;AAEW,qBAAa,gBAmCzB,CAAA","file":"components/list.component/list.component.js","sourcesContent":["import { Component } from '@angular/core';\nimport { ListService } from \"../../shared/list.service\";\nimport { Person } from \"../../shared/person.model\";\nimport { ListFilter } from \"../../shared/listFilter.model\";\n\n@Component({\n  selector: 'list',\n  templateUrl: 'app/components/list.component/list.component.html',\n  providers: [ ListService ]\n})\n\nexport class ListComponent {\n  public displayingPersons: Person[];\n  public personsCount: number;\n  public personsData: Person[];\n\n  constructor(private listService: ListService) {\n    this.getData();\n  }\n\n  private initList(data):void {\n    this.personsData = this.displayingPersons = data;\n  }\n\n  private getData():void {\n    this.listService.getPromiseData()\n      .then((data) => this.initList(data));\n  }\n\n  private checkContainsInPerson(person: Person, filter: ListFilter):boolean {\n    let isContain: boolean = true;\n    for (let prop in filter) {\n      if (!this.checkContainsInString(person[prop], filter[prop])) isContain = false;\n    }\n    return isContain;\n  }\n\n  private checkContainsInString(personString: string, filterString: string):boolean {\n    return personString.toLowerCase()\n      .includes(filterString.toLowerCase())\n  }\n\n  private onFilterChange(filter: ListFilter):void {\n    this.displayingPersons = this.personsData\n      .filter(person => this.checkContainsInPerson(person, filter));\n  }\n}\n"],"sourceRoot":"/source/"}